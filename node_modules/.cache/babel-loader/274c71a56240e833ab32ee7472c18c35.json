{"ast":null,"code":"import _slicedToArray from\"C:/Users/genti/Documents/Safeart_Dapp/SafeArt_Dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{ethers}from'ethers';// import './WalletCard.css'\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var WalletCard=function WalletCard(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),errorMessage=_useState2[0],setErrorMessage=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),defaultAccount=_useState4[0],setDefaultAccount=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),userBalance=_useState6[0],setUserBalance=_useState6[1];var _useState7=useState('Connect Wallet'),_useState8=_slicedToArray(_useState7,2),connButtonText=_useState8[0],setConnButtonText=_useState8[1];var connectWalletHandler=function connectWalletHandler(){if(window.ethereum&&window.ethereum.isMetaMask){console.log('MetaMask Here!');window.ethereum.request({method:'eth_requestAccounts'}).then(function(result){accountChangedHandler(result[0]);setConnButtonText('Wallet Connected');getAccountBalance(result[0]);}).catch(function(error){setErrorMessage(error);});}else{console.log('Need to install MetaMask');setErrorMessage('Please install MetaMask browser extension to interact');}};// update account, will cause component re-render\nvar accountChangedHandler=function accountChangedHandler(newAccount){setDefaultAccount(newAccount);getAccountBalance(newAccount.toString());};var getAccountBalance=function getAccountBalance(account){window.ethereum.request({method:'eth_getBalance',params:[account,'latest']}).then(function(balance){setUserBalance(ethers.utils.formatEther(balance));}).catch(function(error){setErrorMessage(error);});};var chainChangedHandler=function chainChangedHandler(){// reload the page to avoid any errors with chain change mid use of application\nwindow.location.reload();};// listen for account changes\nwindow.ethereum.on('accountsChanged',accountChangedHandler);window.ethereum.on('chainChanged',chainChangedHandler);return/*#__PURE__*/_jsxs(\"ul\",{className:\"navbar-nav action\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"nav-item ml-3\",children:/*#__PURE__*/_jsxs(\"a\",{className:\"btn ml-lg-auto btn-bordered-white\",onClick:connectWalletHandler,children:[\" \",connButtonText,\" \",/*#__PURE__*/_jsx(\"i\",{className:\"icon-wallet mr-md-2\"})]})}),errorMessage]});};export default WalletCard;","map":{"version":3,"sources":["C:/Users/genti/Documents/Safeart_Dapp/SafeArt_Dapp/src/WalletCard.js"],"names":["React","useState","ethers","WalletCard","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","userBalance","setUserBalance","connButtonText","setConnButtonText","connectWalletHandler","window","ethereum","isMetaMask","console","log","request","method","then","result","accountChangedHandler","getAccountBalance","catch","error","newAccount","toString","account","params","balance","utils","formatEther","chainChangedHandler","location","reload","on"],"mappings":"yKAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAAQC,MAAR,KAAqB,QAArB,CACA;wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAExB,cAAwCF,QAAQ,CAAC,IAAD,CAAhD,wCAAOG,YAAP,eAAqBC,eAArB,eACA,eAA4CJ,QAAQ,CAAC,IAAD,CAApD,yCAAOK,cAAP,eAAuBC,iBAAvB,eACA,eAAsCN,QAAQ,CAAC,IAAD,CAA9C,yCAAOO,WAAP,eAAoBC,cAApB,eACA,eAA4CR,QAAQ,CAAC,gBAAD,CAApD,yCAAOS,cAAP,eAAuBC,iBAAvB,eAEA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CAClC,GAAIC,MAAM,CAACC,QAAP,EAAmBD,MAAM,CAACC,QAAP,CAAgBC,UAAvC,CAAmD,CAClDC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAEAJ,MAAM,CAACC,QAAP,CAAgBI,OAAhB,CAAwB,CAAEC,MAAM,CAAE,qBAAV,CAAxB,EACCC,IADD,CACM,SAAAC,MAAM,CAAI,CACfC,qBAAqB,CAACD,MAAM,CAAC,CAAD,CAAP,CAArB,CACAV,iBAAiB,CAAC,kBAAD,CAAjB,CACAY,iBAAiB,CAACF,MAAM,CAAC,CAAD,CAAP,CAAjB,CACA,CALD,EAMCG,KAND,CAMO,SAAAC,KAAK,CAAI,CACfpB,eAAe,CAACoB,KAAD,CAAf,CACA,CARD,EAUA,CAbD,IAaO,CACNT,OAAO,CAACC,GAAR,CAAY,0BAAZ,EACAZ,eAAe,CAAC,uDAAD,CAAf,CACA,CACD,CAlBD,CAoBA;AACA,GAAMiB,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACI,UAAD,CAAgB,CAC7CnB,iBAAiB,CAACmB,UAAD,CAAjB,CACAH,iBAAiB,CAACG,UAAU,CAACC,QAAX,EAAD,CAAjB,CACA,CAHD,CAKA,GAAMJ,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACK,OAAD,CAAa,CACtCf,MAAM,CAACC,QAAP,CAAgBI,OAAhB,CAAwB,CAACC,MAAM,CAAE,gBAAT,CAA2BU,MAAM,CAAE,CAACD,OAAD,CAAU,QAAV,CAAnC,CAAxB,EACCR,IADD,CACM,SAAAU,OAAO,CAAI,CAChBrB,cAAc,CAACP,MAAM,CAAC6B,KAAP,CAAaC,WAAb,CAAyBF,OAAzB,CAAD,CAAd,CACA,CAHD,EAICN,KAJD,CAIO,SAAAC,KAAK,CAAI,CACfpB,eAAe,CAACoB,KAAD,CAAf,CACA,CAND,EAOA,CARD,CAUA,GAAMQ,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CACjC;AACApB,MAAM,CAACqB,QAAP,CAAgBC,MAAhB,GACA,CAHD,CAMA;AACAtB,MAAM,CAACC,QAAP,CAAgBsB,EAAhB,CAAmB,iBAAnB,CAAsCd,qBAAtC,EAEAT,MAAM,CAACC,QAAP,CAAgBsB,EAAhB,CAAmB,cAAnB,CAAmCH,mBAAnC,EAEA,mBACG,YAAI,SAAS,CAAC,mBAAd,wBACI,WAAI,SAAS,CAAC,eAAd,uBACI,WAAG,SAAS,CAAC,mCAAb,CAAiD,OAAO,CAAErB,oBAA1D,eAAkFF,cAAlF,kBAAkG,UAAG,SAAS,CAAC,qBAAb,EAAlG,GADJ,EADJ,CAMKN,YANL,GADH,CAiBA,CAvED,CAyEA,cAAeD,CAAAA,UAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport {ethers} from 'ethers'\r\n// import './WalletCard.css'\r\n\r\nconst WalletCard = () => {\r\n\r\n\tconst [errorMessage, setErrorMessage] = useState(null);\r\n\tconst [defaultAccount, setDefaultAccount] = useState(null);\r\n\tconst [userBalance, setUserBalance] = useState(null);\r\n\tconst [connButtonText, setConnButtonText] = useState('Connect Wallet');\r\n\r\n\tconst connectWalletHandler = () => {\r\n\t\tif (window.ethereum && window.ethereum.isMetaMask) {\r\n\t\t\tconsole.log('MetaMask Here!');\r\n\r\n\t\t\twindow.ethereum.request({ method: 'eth_requestAccounts'})\r\n\t\t\t.then(result => {\r\n\t\t\t\taccountChangedHandler(result[0]);\r\n\t\t\t\tsetConnButtonText('Wallet Connected');\r\n\t\t\t\tgetAccountBalance(result[0]);\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tsetErrorMessage(error);\r\n\t\t\t});\r\n\r\n\t\t} else {\r\n\t\t\tconsole.log('Need to install MetaMask');\r\n\t\t\tsetErrorMessage('Please install MetaMask browser extension to interact');\r\n\t\t}\r\n\t}\r\n\r\n\t// update account, will cause component re-render\r\n\tconst accountChangedHandler = (newAccount) => {\r\n\t\tsetDefaultAccount(newAccount);\r\n\t\tgetAccountBalance(newAccount.toString());\r\n\t}\r\n\r\n\tconst getAccountBalance = (account) => {\r\n\t\twindow.ethereum.request({method: 'eth_getBalance', params: [account, 'latest']})\r\n\t\t.then(balance => {\r\n\t\t\tsetUserBalance(ethers.utils.formatEther(balance));\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tsetErrorMessage(error);\r\n\t\t});\r\n\t};\r\n\r\n\tconst chainChangedHandler = () => {\r\n\t\t// reload the page to avoid any errors with chain change mid use of application\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\r\n\t// listen for account changes\r\n\twindow.ethereum.on('accountsChanged', accountChangedHandler);\r\n\r\n\twindow.ethereum.on('chainChanged', chainChangedHandler);\r\n\t\r\n\treturn (\r\n    <ul className=\"navbar-nav action\">\r\n        <li className=\"nav-item ml-3\">\r\n            <a className=\"btn ml-lg-auto btn-bordered-white\" onClick={connectWalletHandler}> {connButtonText} <i className=\"icon-wallet mr-md-2\" /></a>\r\n\r\n            \r\n        </li>\r\n        {errorMessage}\r\n        {/* <div className='accountDisplay'>\r\n            <h3>Address: {defaultAccount}</h3>\r\n        </div>\r\n        <div className='balanceDisplay'>\r\n            <h3>Balance: {userBalance}</h3>\r\n        </div> */}\r\n    </ul>\r\n\t\t\r\n\t);\r\n}\r\n\r\nexport default WalletCard;"]},"metadata":{},"sourceType":"module"}