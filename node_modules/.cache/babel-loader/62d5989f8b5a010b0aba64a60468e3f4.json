{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genti\\\\Documents\\\\Safeart_Dapp\\\\SafeArt_Dapp\\\\src\\\\WalletCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers'; // import './WalletCard.css'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WalletCard = () => {\n  _s();\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [userBalance, setUserBalance] = useState(null);\n  const [connButtonText, setConnButtonText] = useState('Connect Wallet');\n\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      console.log('MetaMask Here!');\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(result => {\n        accountChangedHandler(result[0]);\n        setConnButtonText('Wallet Connected');\n        getAccountBalance(result[0]);\n      }).catch(error => {\n        setErrorMessage(error);\n      });\n    } else {\n      console.log('Need to install MetaMask');\n      setErrorMessage('Please install MetaMask browser extension to interact');\n    }\n  }; // update account, will cause component re-render\n\n\n  const accountChangedHandler = newAccount => {\n    setDefaultAccount(newAccount);\n    getAccountBalance(newAccount.toString());\n  };\n\n  const getAccountBalance = account => {\n    window.ethereum.request({\n      method: 'eth_getBalance',\n      params: [account, 'latest']\n    }).then(balance => {\n      setUserBalance(ethers.utils.formatEther(balance));\n    }).catch(error => {\n      setErrorMessage(error);\n    });\n  };\n\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n  }; // listen for account changes\n\n\n  window.ethereum.on('accountsChanged', accountChangedHandler);\n  window.ethereum.on('chainChanged', chainChangedHandler);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"navbar-nav action\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"nav-item ml-3\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"btn ml-lg-auto btn-bordered-white\",\n        href: \"/claim-your-NFT\",\n        children: [\"Claim your NFT\", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \" m-3 icon-wallet mr-md-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), errorMessage]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WalletCard, \"958uiNd4ZvD4oxPz84YlssYAopU=\");\n\n_c = WalletCard;\nexport default WalletCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletCard\");","map":{"version":3,"sources":["C:/Users/genti/Documents/Safeart_Dapp/SafeArt_Dapp/src/WalletCard.js"],"names":["React","useState","ethers","WalletCard","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","userBalance","setUserBalance","connButtonText","setConnButtonText","connectWalletHandler","window","ethereum","isMetaMask","console","log","request","method","then","result","accountChangedHandler","getAccountBalance","catch","error","newAccount","toString","account","params","balance","utils","formatEther","chainChangedHandler","location","reload","on"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport {ethers} from 'ethers'\r\n// import './WalletCard.css'\r\n\r\nconst WalletCard = () => {\r\n\r\n\tconst [errorMessage, setErrorMessage] = useState(null);\r\n\tconst [defaultAccount, setDefaultAccount] = useState(null);\r\n\tconst [userBalance, setUserBalance] = useState(null);\r\n\tconst [connButtonText, setConnButtonText] = useState('Connect Wallet');\r\n\r\n\tconst connectWalletHandler = () => {\r\n\t\tif (window.ethereum && window.ethereum.isMetaMask) {\r\n\t\t\tconsole.log('MetaMask Here!');\r\n\r\n\t\t\twindow.ethereum.request({ method: 'eth_requestAccounts'})\r\n\t\t\t.then(result => {\r\n\t\t\t\taccountChangedHandler(result[0]);\r\n\t\t\t\tsetConnButtonText('Wallet Connected');\r\n\t\t\t\tgetAccountBalance(result[0]);\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tsetErrorMessage(error);\r\n\t\t\t});\r\n\r\n\t\t} else {\r\n\t\t\tconsole.log('Need to install MetaMask');\r\n\t\t\tsetErrorMessage('Please install MetaMask browser extension to interact');\r\n\t\t}\r\n\t}\r\n\r\n\t// update account, will cause component re-render\r\n\tconst accountChangedHandler = (newAccount) => {\r\n\t\tsetDefaultAccount(newAccount);\r\n\t\tgetAccountBalance(newAccount.toString());\r\n\t}\r\n\r\n\tconst getAccountBalance = (account) => {\r\n\t\twindow.ethereum.request({method: 'eth_getBalance', params: [account, 'latest']})\r\n\t\t.then(balance => {\r\n\t\t\tsetUserBalance(ethers.utils.formatEther(balance));\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tsetErrorMessage(error);\r\n\t\t});\r\n\t};\r\n\r\n\tconst chainChangedHandler = () => {\r\n\t\t// reload the page to avoid any errors with chain change mid use of application\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\r\n\t// listen for account changes\r\n\twindow.ethereum.on('accountsChanged', accountChangedHandler);\r\n\r\n\twindow.ethereum.on('chainChanged', chainChangedHandler);\r\n\t\r\n\treturn (\r\n    <ul className=\"navbar-nav action\">\r\n        <li className=\"nav-item ml-3\">\r\n            {/* <a className=\"btn ml-lg-auto btn-bordered-white\" onClick={connectWalletHandler}> {connButtonText} <i className=\"icon-wallet mr-md-2\" /></a> */}\r\n            <a className=\"btn ml-lg-auto btn-bordered-white\" href=\"/claim-your-NFT\">\r\n\t\t\t\tClaim your NFT\r\n\t\t\t\t<i className=\" m-3 icon-wallet mr-md-2\" />\r\n\t\t\t</a>\r\n        </li>\r\n        {errorMessage}\r\n        {/* <div className='accountDisplay'>\r\n            <h3>Address: {defaultAccount}</h3>\r\n        </div>\r\n        <div className='balanceDisplay'>\r\n            <h3>Balance: {userBalance}</h3>\r\n        </div> */}\r\n    </ul>\r\n\t\t\r\n\t);\r\n}\r\n\r\nexport default WalletCard;"]},"metadata":{},"sourceType":"module"}