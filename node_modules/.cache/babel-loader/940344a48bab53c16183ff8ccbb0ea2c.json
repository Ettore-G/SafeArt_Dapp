{"ast":null,"code":"import _slicedToArray from\"C:/Users/genti/Documents/Safeart_Dapp/SafeArt_Dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{ethers}from'ethers';// import './WalletCard.css'\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var WalletCardEthers=function WalletCardEthers(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),errorMessage=_useState2[0],setErrorMessage=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),defaultAccount=_useState4[0],setDefaultAccount=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),userBalance=_useState6[0],setUserBalance=_useState6[1];var _useState7=useState('Connect Wallet'),_useState8=_slicedToArray(_useState7,2),connButtonText=_useState8[0],setConnButtonText=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),provider=_useState10[0],setProvider=_useState10[1];var connectWalletHandler=function connectWalletHandler(){if(window.ethereum&&defaultAccount==null){// set ethers provider\nsetProvider(new ethers.providers.Web3Provider(window.ethereum));// connect to metamask\nwindow.ethereum.request({method:'eth_requestAccounts'}).then(function(result){setConnButtonText('Wallet Connected');setDefaultAccount(result[0]);}).catch(function(error){setErrorMessage(error);});}else if(!window.ethereum){console.log('Need to install MetaMask');setErrorMessage('Please install MetaMask browser extension to interact');}};useEffect(function(){if(provider&&defaultAccount){provider.getBalance(defaultAccount).then(function(balanceResult){setUserBalance(ethers.utils.formatEther(balanceResult));});};},[defaultAccount]);return/*#__PURE__*/_jsxs(\"div\",{className:\"walletCard\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\" Connection to MetaMask using ethers.js \"}),/*#__PURE__*/_jsx(\"button\",{onClick:connectWalletHandler,children:connButtonText}),/*#__PURE__*/_jsx(\"div\",{className:\"accountDisplay\",children:/*#__PURE__*/_jsxs(\"h3\",{children:[\"Address: \",defaultAccount]})}),/*#__PURE__*/_jsx(\"div\",{className:\"balanceDisplay\",children:/*#__PURE__*/_jsxs(\"h3\",{children:[\"Balance: \",userBalance]})}),errorMessage]});};export default WalletCardEthers;","map":{"version":3,"sources":["C:/Users/genti/Documents/Safeart_Dapp/SafeArt_Dapp/src/WalletCardEthers.js"],"names":["React","useState","useEffect","ethers","WalletCardEthers","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","userBalance","setUserBalance","connButtonText","setConnButtonText","provider","setProvider","connectWalletHandler","window","ethereum","providers","Web3Provider","request","method","then","result","catch","error","console","log","getBalance","balanceResult","utils","formatEther"],"mappings":"yKAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,OAAQC,MAAR,KAAqB,QAArB,CACA;wFAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAE9B,cAAwCH,QAAQ,CAAC,IAAD,CAAhD,wCAAOI,YAAP,eAAqBC,eAArB,eACA,eAA4CL,QAAQ,CAAC,IAAD,CAApD,yCAAOM,cAAP,eAAuBC,iBAAvB,eACA,eAAsCP,QAAQ,CAAC,IAAD,CAA9C,yCAAOQ,WAAP,eAAoBC,cAApB,eACA,eAA4CT,QAAQ,CAAC,gBAAD,CAApD,yCAAOU,cAAP,eAAuBC,iBAAvB,eACA,eAAgCX,QAAQ,CAAC,IAAD,CAAxC,0CAAOY,QAAP,gBAAiBC,WAAjB,gBAEA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CAClC,GAAIC,MAAM,CAACC,QAAP,EAAmBV,cAAc,EAAI,IAAzC,CAA+C,CAC9C;AACAO,WAAW,CAAC,GAAIX,CAAAA,MAAM,CAACe,SAAP,CAAiBC,YAArB,CAAkCH,MAAM,CAACC,QAAzC,CAAD,CAAX,CAEA;AACAD,MAAM,CAACC,QAAP,CAAgBG,OAAhB,CAAwB,CAAEC,MAAM,CAAE,qBAAV,CAAxB,EACCC,IADD,CACM,SAAAC,MAAM,CAAI,CACfX,iBAAiB,CAAC,kBAAD,CAAjB,CACAJ,iBAAiB,CAACe,MAAM,CAAC,CAAD,CAAP,CAAjB,CACA,CAJD,EAKCC,KALD,CAKO,SAAAC,KAAK,CAAI,CACfnB,eAAe,CAACmB,KAAD,CAAf,CACA,CAPD,EASA,CAdD,IAcO,IAAI,CAACT,MAAM,CAACC,QAAZ,CAAqB,CAC3BS,OAAO,CAACC,GAAR,CAAY,0BAAZ,EACArB,eAAe,CAAC,uDAAD,CAAf,CACA,CACD,CAnBD,CAqBDJ,SAAS,CAAC,UAAM,CACf,GAAGW,QAAQ,EAAIN,cAAf,CAA8B,CAC9BM,QAAQ,CAACe,UAAT,CAAoBrB,cAApB,EACCe,IADD,CACM,SAAAO,aAAa,CAAI,CACtBnB,cAAc,CAACP,MAAM,CAAC2B,KAAP,CAAaC,WAAb,CAAyBF,aAAzB,CAAD,CAAd,CACA,CAHD,EAIC,EACD,CAPQ,CAON,CAACtB,cAAD,CAPM,CAAT,CASC,mBACC,aAAK,SAAS,CAAC,YAAf,wBACA,gEADA,cAEC,eAAQ,OAAO,CAAEQ,oBAAjB,UAAwCJ,cAAxC,EAFD,cAGC,YAAK,SAAS,CAAC,gBAAf,uBACC,kCAAcJ,cAAd,GADD,EAHD,cAMC,YAAK,SAAS,CAAC,gBAAf,uBACC,kCAAcE,WAAd,GADD,EAND,CASEJ,YATF,GADD,CAaA,CAnDD,CAqDA,cAAeD,CAAAA,gBAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {ethers} from 'ethers'\r\n// import './WalletCard.css'\r\n\r\nconst WalletCardEthers = () => {\r\n\r\n\tconst [errorMessage, setErrorMessage] = useState(null);\r\n\tconst [defaultAccount, setDefaultAccount] = useState(null);\r\n\tconst [userBalance, setUserBalance] = useState(null);\r\n\tconst [connButtonText, setConnButtonText] = useState('Connect Wallet');\r\n\tconst [provider, setProvider] = useState(null);\r\n\r\n\tconst connectWalletHandler = () => {\r\n\t\tif (window.ethereum && defaultAccount == null) {\r\n\t\t\t// set ethers provider\r\n\t\t\tsetProvider(new ethers.providers.Web3Provider(window.ethereum));\r\n\r\n\t\t\t// connect to metamask\r\n\t\t\twindow.ethereum.request({ method: 'eth_requestAccounts'})\r\n\t\t\t.then(result => {\r\n\t\t\t\tsetConnButtonText('Wallet Connected');\r\n\t\t\t\tsetDefaultAccount(result[0]);\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tsetErrorMessage(error);\r\n\t\t\t});\r\n\r\n\t\t} else if (!window.ethereum){\r\n\t\t\tconsole.log('Need to install MetaMask');\r\n\t\t\tsetErrorMessage('Please install MetaMask browser extension to interact');\r\n\t\t}\r\n\t}\r\n\r\nuseEffect(() => {\r\n\tif(provider && defaultAccount){\r\n\tprovider.getBalance(defaultAccount)\r\n\t.then(balanceResult => {\r\n\t\tsetUserBalance(ethers.utils.formatEther(balanceResult));\r\n\t})\r\n\t};\r\n}, [defaultAccount]);\r\n\t\r\n\treturn (\r\n\t\t<div className='walletCard'>\r\n\t\t<h4> Connection to MetaMask using ethers.js </h4>\r\n\t\t\t<button onClick={connectWalletHandler}>{connButtonText}</button>\r\n\t\t\t<div className='accountDisplay'>\r\n\t\t\t\t<h3>Address: {defaultAccount}</h3>\r\n\t\t\t</div>\r\n\t\t\t<div className='balanceDisplay'>\r\n\t\t\t\t<h3>Balance: {userBalance}</h3>\r\n\t\t\t</div>\r\n\t\t\t{errorMessage}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default WalletCardEthers;"]},"metadata":{},"sourceType":"module"}